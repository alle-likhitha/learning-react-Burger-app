{"version":3,"sources":["components/Order/order.module.css","components/Order/order.js","containers/Orders/Orders.js"],"names":["module","exports","order","props","ing","iname","ingredients","push","name","amount","ingOutput","map","i","key","style","textTransform","display","margin","padding","border","className","classes","Order","price","connect","state","orders","loading","token","auth","tokenId","userId","dispatch","onFetchOrders","actions","withErrorHandler","useEffect","Spinner","id","axios"],"mappings":"+GACAA,EAAOC,QAAU,CAAC,MAAQ,uB,8EC8BXC,EA7BF,SAACC,GACV,IAAMC,EAAK,GACX,IAAI,IAAMC,KAASF,EAAMG,YACrBF,EAAIG,KAAK,CAAEC,KAAKH,EAAOI,OAAON,EAAMG,YAAYD,KAIpD,IAAMK,EAAYN,EAAIO,KAAI,SAAAC,GAC1B,OAAO,0BACPC,IAAKD,EAAEJ,KACPM,MAAO,CACHC,cAAc,aACdC,QAAQ,eACRC,OAAO,QACPC,QAAQ,MACRC,OAAO,oBAPJ,IASFP,EAAEJ,KATA,OASUI,EAAEH,OATZ,QAWP,OACI,yBAAKW,UAAWC,IAAQC,OACxB,4BACA,4CAAkBZ,EAAlB,KACA,qCAAU,sCAAYP,EAAMoB,U,uCCwBrBC,uBAfS,SAACC,GACrB,MAAM,CACFC,OAAOD,EAAMvB,MAAMwB,OACnBC,QAAQF,EAAMvB,MAAMyB,QACpBC,MAAMH,EAAMI,KAAKC,QACjBC,OAAQN,EAAMI,KAAKE,WAIF,SAACC,GAC1B,MAAM,CACFC,cAAe,SAACL,EAAOG,GAAR,OAAkBC,EAASE,IAAmBN,EAAOG,QAIzDP,CAA6CW,aAxC7C,SAAAhC,GAEXiC,qBAAU,WACNjC,EAAM8B,cAAc9B,EAAMyB,MAAOzB,EAAM4B,UAEzC,IAEE,IAAIL,EAAS,kBAACW,EAAA,EAAD,MASb,OARIlC,EAAMwB,UACND,EAAQvB,EAAMuB,OAAOf,KAAI,SAAAT,GAAK,OAC1B,kBAAC,EAAD,CAAOI,YAAaJ,EAAMI,YAC1BO,IAAKX,EAAMoC,GACXf,MAAOrB,EAAMqB,YAKjB,6BACKG,KAsBoEa","file":"static/js/5.8d0646fc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"order_Order__mz5vH\"};","import React from 'react';\nimport classes from './order.module.css';\nconst order =(props)=>{\n    const ing =[];\n    for(const iname in props.ingredients){\n        ing.push({ name:iname, amount:props.ingredients[iname]})\n    }\n\n\n    const ingOutput = ing.map(i =>{\n    return <span \n    key={i.name}\n    style={{\n        textTransform:'capitalize',\n        display:'inline-block',\n        margin:'0 9px',\n        padding:'5px',\n        border:'1px solid black'\n\n    }}> {i.name}   ({i.amount})</span>\n    })\n    return(\n        <div className={classes.Order }>\n        <p></p>\n        <p>Ingredients : {ingOutput} </p>\n        <p>Price: <strong>Rs {props.price}</strong></p>\n        </div>\n    );\n \n};\n\nexport default order;","import React, { useEffect } from 'react';\nimport Order from '../../components/Order/order'\nimport axios from '../../axios-order';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../store/action/index';\nimport {connect} from 'react-redux';\nimport Spinner from '../../components/UI/Spinner/Spinner';\n\n\nconst Orders = props =>{\n    \n    useEffect(() => {\n        props.onFetchOrders(props.token, props.userId)\n    // eslint-disable-next-line    \n    },[])\n\n        let orders = <Spinner />\n        if(!props.loading){\n            orders= props.orders.map(order=>(\n                <Order ingredients={order.ingredients} \n                key={order.id}\n                price={order.price}></Order>\n                ))\n            \n        }\n        return(\n            <div>\n                {orders}\n                \n            </div>\n            \n        );\n\n}\nconst mapStatetoProps = (state)=>{\n    return{\n        orders:state.order.orders,\n        loading:state.order.loading,\n        token:state.auth.tokenId,\n        userId: state.auth.userId\n    }\n}\n\nconst mapDispatchtoProps=(dispatch)=>{\nreturn{\n    onFetchOrders :(token, userId) =>dispatch(actions.orderFetch(token, userId))\n}\n}\n\nexport default connect(mapStatetoProps, mapDispatchtoProps)(withErrorHandler(Orders, axios));"],"sourceRoot":""}